; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 3
; RUN: opt < %s -S -passes=instcombine | FileCheck %s

target datalayout = "e-p:64:64:64"

define ptr @add1(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @add1(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr [[P]], i64 0, i64 [[O]], i64 11, i64 -6, i64 [[N]]
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 1
  %g = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr %p, i64 0, i64 %a, i64 1, i64 -6, i64 %n
  ret ptr %g
}

define ptr @sub1(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @sub1(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr [[P]], i64 0, i64 [[O]], i64 -9, i64 -6, i64 [[N]]
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = sub i64 %o, 1
  %g = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr %p, i64 0, i64 %a, i64 1, i64 -6, i64 %n
  ret ptr %g
}

define ptr @add10(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @add10(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr [[P]], i64 0, i64 [[O]], i64 101, i64 -6, i64 [[N]]
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 10
  %g = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr %p, i64 0, i64 %a, i64 1, i64 -6, i64 %n
  ret ptr %g
}

define ptr @nooff(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @nooff(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[A:%.*]] = add i64 [[O]], 10
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr [[P]], i64 0, i64 [[A]], i64 [[N]]
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 10
  %g = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr %p, i64 0, i64 %a, i64 %n
  ret ptr %g
}

define ptr @inbounds(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @inbounds(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x [10 x i32]]]], ptr [[P]], i64 0, i64 [[O]], i64 11, i64 -6, i64 [[N]]
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 1
  %g = getelementptr inbounds [10 x [10 x [10 x [10 x i32]]]], ptr %p, i64 0, i64 %a, i64 1, i64 -6, i64 %n
  ret ptr %g
}

%struct.Struct = type { i32, i32, ptr }
define ptr @struct(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @struct(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[A:%.*]] = add i64 [[O]], -1
; CHECK-NEXT:    [[G:%.*]] = getelementptr [[STRUCT_STRUCT:%.*]], ptr [[P]], i64 [[A]], i32 1
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, -1
  %g = getelementptr %struct.Struct, ptr %p, i64 %a, i32 1
  ret ptr %g
}

define ptr @lessargs(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @lessargs(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x i32]]], ptr [[P]], i64 0, i64 [[O]], i64 11
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 1
  %g = getelementptr [10 x [10 x [10 x i32]]], ptr %p, i64 0, i64 %a, i64 1
  ret ptr %g
}

define ptr @twice(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @twice(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [10 x [10 x [10 x [10 x [10 x i32]]]]], ptr [[P]], i64 0, i64 [[O]], i64 11, i64 [[O]], i64 -13
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 1
  %b = sub i64 %o, 1
  %g = getelementptr [10 x [10 x [10 x [10 x [10 x i32]]]]], ptr %p, i64 0, i64 %a, i64 1, i64 %b, i64 -3
  ret ptr %g
}

define ptr @simpler(ptr %p, i64 %o, i64 %n) {
; CHECK-LABEL: define ptr @simpler(
; CHECK-SAME: ptr [[P:%.*]], i64 [[O:%.*]], i64 [[N:%.*]]) {
; CHECK-NEXT:    [[G:%.*]] = getelementptr [16 x [8 x i32]], ptr [[P]], i64 0, i64 [[O]], i64 65
; CHECK-NEXT:    ret ptr [[G]]
;
  %a = add i64 %o, 8
  %g = getelementptr [16 x [8 x i32]], ptr %p, i64 0, i64 %a, i64 1
  ret ptr %g
}
