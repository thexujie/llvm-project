; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 4
; RUN: llc -mtriple=arm-eabi -mattr=+v6t2 %s -o - | FileCheck %s

define i32 @f1(i32 %a) {
; CHECK-LABEL: f1:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    sbfx r0, r0, #0, #20
; CHECK-NEXT:    bx lr
entry:
    %tmp = shl i32 %a, 12
    %tmp2 = ashr i32 %tmp, 12
    ret i32 %tmp2
}

define i32 @f2(i32 %a) {
; CHECK-LABEL: f2:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    bfc r0, #20, #12
; CHECK-NEXT:    bx lr
entry:
    %tmp = shl i32 %a, 12
    %tmp2 = lshr i32 %tmp, 12
    ret i32 %tmp2
}

define i32 @f3(i32 %a) {
; CHECK-LABEL: f3:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    sbfx r0, r0, #5, #3
; CHECK-NEXT:    bx lr
entry:
    %tmp = shl i32 %a, 24
    %tmp2 = ashr i32 %tmp, 29
    ret i32 %tmp2
}

define i32 @f4(i32 %a) {
; CHECK-LABEL: f4:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    ubfx r0, r0, #5, #3
; CHECK-NEXT:    bx lr
entry:
    %tmp = shl i32 %a, 24
    %tmp2 = lshr i32 %tmp, 29
    ret i32 %tmp2
}

define i32 @f5(i32 %a) {
; CHECK-LABEL: f5:
; CHECK:       @ %bb.0: @ %entry
; CHECK-NEXT:    lsl r0, r0, #3
; CHECK-NEXT:    asr r0, r0, #1
; CHECK-NEXT:    bx lr
entry:
    %tmp = shl i32 %a, 3
    %tmp2 = ashr i32 %tmp, 1
    ret i32 %tmp2
}

define signext i8 @f6(i32 %a) {
; CHECK-LABEL: f6:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    sbfx r0, r0, #23, #8
; CHECK-NEXT:    bx lr

  %tmp = lshr i32 %a, 23
  %res = trunc i32 %tmp to i8
  ret i8 %res
}

define signext i8 @f7(i32 %a) {
; CHECK-LABEL: f7:
; CHECK:       @ %bb.0:
; CHECK-NEXT:    lsr r0, r0, #25
; CHECK-NEXT:    bx lr

  %tmp = lshr i32 %a, 25
  %res = trunc i32 %tmp to i8
  ret i8 %res
}
