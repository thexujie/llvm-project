; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 2
; RUN: llc -mtriple=amdgcn -mcpu=gfx906 < %s | FileCheck --check-prefix=GFX906 %s

define amdgpu_kernel void @v32i8_liveout(ptr addrspace(1) %src1, ptr addrspace(1) %src2, ptr addrspace(1) nocapture %dst) {
; GFX906-LABEL: v32i8_liveout:
; GFX906:       ; %bb.0: ; %entry
; GFX906-NEXT:    s_load_dwordx2 s[2:3], s[0:1], 0x24
; GFX906-NEXT:    v_lshlrev_b32_e32 v1, 5, v0
; GFX906-NEXT:    v_cmp_lt_u32_e32 vcc, 14, v0
; GFX906-NEXT:    s_mov_b32 s4, 0x2000604
; GFX906-NEXT:    s_waitcnt lgkmcnt(0)
; GFX906-NEXT:    global_load_dword v1, v1, s[2:3]
; GFX906-NEXT:    s_mov_b64 s[2:3], 0
; GFX906-NEXT:    s_waitcnt vmcnt(0)
; GFX906-NEXT:    v_mov_b32_e32 v0, v1
; GFX906-NEXT:  .LBB0_1: ; %bb.1
; GFX906-NEXT:    ; =>This Inner Loop Header: Depth=1
; GFX906-NEXT:    s_and_b64 s[6:7], exec, vcc
; GFX906-NEXT:    s_or_b64 s[2:3], s[6:7], s[2:3]
; GFX906-NEXT:    v_perm_b32 v0, v1, v0, s4
; GFX906-NEXT:    s_andn2_b64 exec, exec, s[2:3]
; GFX906-NEXT:    s_cbranch_execnz .LBB0_1
; GFX906-NEXT:  ; %bb.2: ; %bb.2.loopexit
; GFX906-NEXT:    s_or_b64 exec, exec, s[2:3]
; GFX906-NEXT:    s_load_dwordx2 s[0:1], s[0:1], 0x34
; GFX906-NEXT:    v_mov_b32_e32 v1, 0
; GFX906-NEXT:    s_waitcnt lgkmcnt(0)
; GFX906-NEXT:    global_store_dword v1, v0, s[0:1]
; GFX906-NEXT:    s_endpgm
entry:
  %idx = call i32 @llvm.amdgcn.workitem.id.x()
  %gep1 = getelementptr <32 x i8>, ptr addrspace(1) %src1, i32 %idx
  %vec1 = load <4 x i8>, ptr addrspace(1) %gep1
  br label %bb.1

bb.1:
  %temp = phi <4 x i8> [ %vec1, %entry ], [ %vec2, %bb.1 ]
  %vec2 = shufflevector <4 x i8> %vec1, <4 x i8> %temp, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %cmp = icmp ult i32 %idx, 15
  br i1 %cmp, label %bb.1, label %bb.2
  br label %bb.2

bb.2:
  store <4 x i8> %vec2, ptr addrspace(1) %dst, align 4
  ret void
}
