; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py UTC_ARGS: --version 3
; RUN: llc -mtriple=riscv64 -verify-machineinstrs -mattr=+m < %s \
; RUN:   | FileCheck -check-prefix=RV64 %s
; ModuleID = '/home/wengliqin/test/shadd.c'

define void @test(ptr nocapture noundef %array2, i32 noundef signext %a, i32 noundef signext %b) #0 {
; RV64-LABEL: test:
; RV64:       # %bb.0: # %entry
; RV64-NEXT:    slli a2, a1, 2
; RV64-NEXT:    li a3, 200
; RV64-NEXT:    mul a3, a1, a3
; RV64-NEXT:    add a0, a0, a3
; RV64-NEXT:    add a2, a0, a2
; RV64-NEXT:    lw a3, 1016(a2)
; RV64-NEXT:    addiw a1, a1, 5
; RV64-NEXT:    addi a3, a3, 1
; RV64-NEXT:    sw a3, 1016(a2)
; RV64-NEXT:    slli a2, a1, 2
; RV64-NEXT:    lui a3, 1
; RV64-NEXT:    add a2, a2, a3
; RV64-NEXT:    add a0, a0, a2
; RV64-NEXT:    sw a1, 904(a0)
; RV64-NEXT:    ret
entry:
  %add = add nsw i32 %a, 5
  %idxprom = sext i32 %add to i64
  %sub = add nsw i32 %a, 4
  %idxprom1 = sext i32 %sub to i64
  %arrayidx2 = getelementptr inbounds [50 x i32], ptr %array2, i64 %idxprom, i64 %idxprom1
  %0 = load i32, ptr %arrayidx2, align 4
  %add3 = add nsw i32 %0, 1
  store i32 %add3, ptr %arrayidx2, align 4
  %1 = sext i32 %a to i64
  %2 = getelementptr [50 x i32], ptr %array2, i64 %1
  %arrayidx8 = getelementptr [50 x i32], ptr %2, i64 25, i64 %idxprom
  store i32 %add, ptr %arrayidx8, align 4
  ret void
}
