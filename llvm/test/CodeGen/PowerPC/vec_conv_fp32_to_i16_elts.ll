; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs -mtriple=powerpc64le-unknown-linux-gnu \
; RUN:     -mcpu=pwr8 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr < %s | \
; RUN: FileCheck %s --check-prefix=CHECK-P8
; RUN: llc -verify-machineinstrs -mtriple=powerpc64le-unknown-linux-gnu \
; RUN:     -mcpu=pwr9 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr < %s | \
; RUN: FileCheck %s --check-prefix=CHECK-P9
; RUN: llc -verify-machineinstrs -mtriple=powerpc64-unknown-linux-gnu \
; RUN:     -mcpu=pwr9 -ppc-asm-full-reg-names -ppc-vsr-nums-as-vr < %s | \
; RUN: FileCheck %s --check-prefix=CHECK-BE

define i32 @test2elt(i64 %a.coerce) local_unnamed_addr #0 {
; CHECK-P8-LABEL: test2elt:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    mtfprd f0, r3
; CHECK-P8-NEXT:    xxswapd v2, vs0
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    xxsldwi vs1, v2, v2, 3
; CHECK-P8-NEXT:    xscvspdpn f0, vs1
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    mffprwz r3, f0
; CHECK-P8-NEXT:    rlwimi r3, r4, 16, 0, 15
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test2elt:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    mtfprd f0, r3
; CHECK-P9-NEXT:    xxswapd v2, vs0
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r4, f0
; CHECK-P9-NEXT:    xxsldwi vs0, v2, v2, 3
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r3, f0
; CHECK-P9-NEXT:    rlwimi r3, r4, 16, 0, 15
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test2elt:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    mtfprd f0, r3
; CHECK-BE-NEXT:    xscvspdpn f1, vs0
; CHECK-BE-NEXT:    xxsldwi vs0, vs0, vs0, 1
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r4, f1
; CHECK-BE-NEXT:    mffprwz r3, f0
; CHECK-BE-NEXT:    rlwimi r3, r4, 16, 0, 15
; CHECK-BE-NEXT:    blr
entry:
  %0 = bitcast i64 %a.coerce to <2 x float>
  %1 = fptoui <2 x float> %0 to <2 x i16>
  %2 = bitcast <2 x i16> %1 to i32
  ret i32 %2
}

define i64 @test4elt(<4 x float> %a) local_unnamed_addr #1 {
; CHECK-P8-LABEL: test4elt:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    xxswapd vs0, v2
; CHECK-P8-NEXT:    xxsldwi vs1, v2, v2, 3
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xxsldwi vs2, v2, v2, 1
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    mffprwz r3, f0
; CHECK-P8-NEXT:    xscvspdpn f0, vs1
; CHECK-P8-NEXT:    xscvspdpn f1, v2
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P8-NEXT:    mffprwz r3, f1
; CHECK-P8-NEXT:    xscvspdpn f1, vs2
; CHECK-P8-NEXT:    mtfprwz f0, r4
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r4, f1
; CHECK-P8-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P8-NEXT:    mtfprwz f1, r4
; CHECK-P8-NEXT:    xxmrghw vs0, vs1, vs0
; CHECK-P8-NEXT:    xxswapd vs0, vs0
; CHECK-P8-NEXT:    mffprd r3, f0
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test4elt:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    xxswapd vs0, v2
; CHECK-P9-NEXT:    xscvspdpn f1, v2
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r3, f0
; CHECK-P9-NEXT:    xxsldwi vs0, v2, v2, 3
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r4, f0
; CHECK-P9-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P9-NEXT:    mffprwz r3, f1
; CHECK-P9-NEXT:    xxsldwi vs1, v2, v2, 1
; CHECK-P9-NEXT:    mtfprwz f0, r4
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r4, f1
; CHECK-P9-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P9-NEXT:    mtfprwz f1, r4
; CHECK-P9-NEXT:    xxmrghw vs0, vs1, vs0
; CHECK-P9-NEXT:    mfvsrld r3, vs0
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test4elt:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    xxswapd vs0, v2
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r3, f0
; CHECK-BE-NEXT:    xxsldwi vs0, v2, v2, 3
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r4, f0
; CHECK-BE-NEXT:    xscvspdpn f0, v2
; CHECK-BE-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mtvsrwz v3, r4
; CHECK-BE-NEXT:    mffprwz r3, f0
; CHECK-BE-NEXT:    xxsldwi vs0, v2, v2, 1
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r4, f0
; CHECK-BE-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-BE-NEXT:    mtvsrwz v2, r4
; CHECK-BE-NEXT:    vmrgow v2, v2, v3
; CHECK-BE-NEXT:    mfvsrd r3, v2
; CHECK-BE-NEXT:    blr
entry:
  %0 = fptoui <4 x float> %a to <4 x i16>
  %1 = bitcast <4 x i16> %0 to i64
  ret i64 %1
}

define <8 x i16> @test8elt(ptr nocapture readonly) local_unnamed_addr #2 {
; CHECK-P8-LABEL: test8elt:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    li r4, 16
; CHECK-P8-NEXT:    lxvd2x vs1, 0, r3
; CHECK-P8-NEXT:    lxvd2x vs0, r3, r4
; CHECK-P8-NEXT:    xxswapd v3, vs1
; CHECK-P8-NEXT:    xscvspdpn f1, vs1
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    xxswapd v2, vs0
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xscvspdpn f6, v2
; CHECK-P8-NEXT:    xxsldwi vs4, v3, v3, 1
; CHECK-P8-NEXT:    xxsldwi vs5, v3, v3, 3
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    xscvdpsxws f6, f6
; CHECK-P8-NEXT:    mffprwz r5, f0
; CHECK-P8-NEXT:    xxsldwi vs2, v2, v2, 1
; CHECK-P8-NEXT:    xscvspdpn f2, vs2
; CHECK-P8-NEXT:    xxsldwi vs3, v2, v2, 3
; CHECK-P8-NEXT:    xscvspdpn f0, vs3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r3, f6
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v3
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r3, f0
; CHECK-P8-NEXT:    rlwimi r3, r5, 16, 0, 15
; CHECK-P8-NEXT:    rldimi r3, r4, 32, 0
; CHECK-P8-NEXT:    mtfprd f0, r3
; CHECK-P8-NEXT:    mffprwz r3, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs4
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P8-NEXT:    mffprwz r3, f1
; CHECK-P8-NEXT:    xscvspdpn f1, vs5
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r5, f1
; CHECK-P8-NEXT:    rlwimi r5, r3, 16, 0, 15
; CHECK-P8-NEXT:    rldimi r5, r4, 32, 0
; CHECK-P8-NEXT:    mtfprd f1, r5
; CHECK-P8-NEXT:    xxmrghd v2, vs0, vs1
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test8elt:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    lxv vs1, 0(r3)
; CHECK-P9-NEXT:    lxv vs0, 16(r3)
; CHECK-P9-NEXT:    xscvspdpn f2, vs1
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r3, f2
; CHECK-P9-NEXT:    xxsldwi vs2, vs1, vs1, 1
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r4, f2
; CHECK-P9-NEXT:    xxswapd vs2, vs1
; CHECK-P9-NEXT:    xxsldwi vs1, vs1, vs1, 3
; CHECK-P9-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r5, f1
; CHECK-P9-NEXT:    xscvspdpn f1, vs0
; CHECK-P9-NEXT:    mffprwz r3, f2
; CHECK-P9-NEXT:    rlwimi r5, r3, 16, 0, 15
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    rldimi r5, r4, 32, 0
; CHECK-P9-NEXT:    mffprwz r3, f1
; CHECK-P9-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r4, f1
; CHECK-P9-NEXT:    xxswapd vs1, vs0
; CHECK-P9-NEXT:    xxsldwi vs0, vs0, vs0, 3
; CHECK-P9-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r3, f1
; CHECK-P9-NEXT:    mffprwz r6, f0
; CHECK-P9-NEXT:    rlwimi r6, r3, 16, 0, 15
; CHECK-P9-NEXT:    rldimi r6, r4, 32, 0
; CHECK-P9-NEXT:    mtvsrdd v2, r6, r5
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test8elt:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    lxv vs1, 16(r3)
; CHECK-BE-NEXT:    lxv vs0, 0(r3)
; CHECK-BE-NEXT:    xscvspdpn f2, vs1
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r3, f2
; CHECK-BE-NEXT:    xxsldwi vs2, vs1, vs1, 1
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r4, f2
; CHECK-BE-NEXT:    xxswapd vs2, vs1
; CHECK-BE-NEXT:    xxsldwi vs1, vs1, vs1, 3
; CHECK-BE-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r5, f1
; CHECK-BE-NEXT:    xscvspdpn f1, vs0
; CHECK-BE-NEXT:    mffprwz r3, f2
; CHECK-BE-NEXT:    rlwimi r5, r3, 16, 0, 15
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    rldimi r5, r4, 32, 0
; CHECK-BE-NEXT:    mffprwz r3, f1
; CHECK-BE-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    mffprwz r4, f1
; CHECK-BE-NEXT:    xxswapd vs1, vs0
; CHECK-BE-NEXT:    xxsldwi vs0, vs0, vs0, 3
; CHECK-BE-NEXT:    rlwimi r4, r3, 16, 0, 15
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r3, f1
; CHECK-BE-NEXT:    mffprwz r6, f0
; CHECK-BE-NEXT:    rlwimi r6, r3, 16, 0, 15
; CHECK-BE-NEXT:    rldimi r6, r4, 32, 0
; CHECK-BE-NEXT:    mtvsrdd v2, r6, r5
; CHECK-BE-NEXT:    blr
entry:
  %a = load <8 x float>, ptr %0, align 32
  %1 = fptoui <8 x float> %a to <8 x i16>
  ret <8 x i16> %1
}

define void @test16elt(ptr noalias nocapture sret(<16 x i16>) %agg.result, ptr nocapture readonly) local_unnamed_addr #3 {
; CHECK-P8-LABEL: test16elt:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    li r5, 32
; CHECK-P8-NEXT:    lxvd2x vs0, 0, r4
; CHECK-P8-NEXT:    lxvd2x vs2, r4, r5
; CHECK-P8-NEXT:    li r5, 48
; CHECK-P8-NEXT:    lxvd2x vs3, r4, r5
; CHECK-P8-NEXT:    li r5, 16
; CHECK-P8-NEXT:    lxvd2x vs1, r4, r5
; CHECK-P8-NEXT:    xxswapd v2, vs0
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    xxswapd v5, vs2
; CHECK-P8-NEXT:    xscvspdpn f2, vs2
; CHECK-P8-NEXT:    xxsldwi vs10, v2, v2, 1
; CHECK-P8-NEXT:    xxsldwi vs11, v2, v2, 3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    xxswapd v4, vs3
; CHECK-P8-NEXT:    xxsldwi vs4, v5, v5, 1
; CHECK-P8-NEXT:    xxsldwi vs5, v5, v5, 3
; CHECK-P8-NEXT:    mffprwz r6, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v5
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r7, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v4
; CHECK-P8-NEXT:    xxsldwi vs6, v4, v4, 1
; CHECK-P8-NEXT:    xxsldwi vs7, v4, v4, 3
; CHECK-P8-NEXT:    xxswapd v3, vs1
; CHECK-P8-NEXT:    xscvspdpn f1, vs1
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r8, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs4
; CHECK-P8-NEXT:    xxsldwi vs9, v3, v3, 3
; CHECK-P8-NEXT:    xxsldwi vs8, v3, v3, 1
; CHECK-P8-NEXT:    xscvspdpn f3, vs8
; CHECK-P8-NEXT:    xscvdpsxws f3, f3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r9, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs5
; CHECK-P8-NEXT:    rlwimi r9, r7, 16, 0, 15
; CHECK-P8-NEXT:    mffprwz r7, f3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r10, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs6
; CHECK-P8-NEXT:    rlwimi r10, r4, 16, 0, 15
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    rldimi r10, r9, 32, 0
; CHECK-P8-NEXT:    mffprwz r11, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs7
; CHECK-P8-NEXT:    rlwimi r11, r8, 16, 0, 15
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v3
; CHECK-P8-NEXT:    rlwimi r4, r6, 16, 0, 15
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    rldimi r4, r11, 32, 0
; CHECK-P8-NEXT:    mtfprd f3, r4
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    mffprwz r6, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs9
; CHECK-P8-NEXT:    rlwimi r7, r6, 16, 0, 15
; CHECK-P8-NEXT:    mffprwz r6, f1
; CHECK-P8-NEXT:    xscvspdpn f1, v2
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r8, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs10
; CHECK-P8-NEXT:    rlwimi r8, r6, 16, 0, 15
; CHECK-P8-NEXT:    mffprwz r6, f1
; CHECK-P8-NEXT:    mtfprd f1, r10
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    rldimi r8, r7, 32, 0
; CHECK-P8-NEXT:    mtfprd f0, r8
; CHECK-P8-NEXT:    mffprwz r12, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs11
; CHECK-P8-NEXT:    rlwimi r12, r6, 16, 0, 15
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r6, f2
; CHECK-P8-NEXT:    rlwimi r6, r4, 16, 0, 15
; CHECK-P8-NEXT:    rldimi r6, r12, 32, 0
; CHECK-P8-NEXT:    mtfprd f2, r6
; CHECK-P8-NEXT:    xxmrghd vs1, vs3, vs1
; CHECK-P8-NEXT:    xxswapd vs1, vs1
; CHECK-P8-NEXT:    stxvd2x vs1, r3, r5
; CHECK-P8-NEXT:    xxmrghd vs0, vs0, vs2
; CHECK-P8-NEXT:    xxswapd vs0, vs0
; CHECK-P8-NEXT:    stxvd2x vs0, 0, r3
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test16elt:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    lxv vs2, 0(r4)
; CHECK-P9-NEXT:    lxv vs0, 48(r4)
; CHECK-P9-NEXT:    lxv vs1, 32(r4)
; CHECK-P9-NEXT:    xxsldwi vs4, vs2, vs2, 1
; CHECK-P9-NEXT:    xscvspdpn f3, vs2
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    xscvdpsxws f3, f3
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r5, f3
; CHECK-P9-NEXT:    lxv vs3, 16(r4)
; CHECK-P9-NEXT:    mffprwz r4, f4
; CHECK-P9-NEXT:    xxswapd vs4, vs2
; CHECK-P9-NEXT:    xxsldwi vs2, vs2, vs2, 3
; CHECK-P9-NEXT:    rlwimi r4, r5, 16, 0, 15
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r5, f2
; CHECK-P9-NEXT:    xxsldwi vs2, vs3, vs3, 1
; CHECK-P9-NEXT:    mffprwz r6, f4
; CHECK-P9-NEXT:    xscvspdpn f4, vs3
; CHECK-P9-NEXT:    rlwimi r5, r6, 16, 0, 15
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    rldimi r5, r4, 32, 0
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r6, f4
; CHECK-P9-NEXT:    xxswapd vs4, vs1
; CHECK-P9-NEXT:    mffprwz r7, f2
; CHECK-P9-NEXT:    xxswapd vs2, vs3
; CHECK-P9-NEXT:    xxsldwi vs3, vs3, vs3, 3
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    rlwimi r7, r6, 16, 0, 15
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvspdpn f3, vs3
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    xscvdpsxws f3, f3
; CHECK-P9-NEXT:    mffprwz r6, f2
; CHECK-P9-NEXT:    mffprwz r8, f3
; CHECK-P9-NEXT:    xscvspdpn f2, vs1
; CHECK-P9-NEXT:    xxsldwi vs3, vs1, vs1, 1
; CHECK-P9-NEXT:    xxsldwi vs1, vs1, vs1, 3
; CHECK-P9-NEXT:    rlwimi r8, r6, 16, 0, 15
; CHECK-P9-NEXT:    mffprwz r6, f4
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvspdpn f3, vs3
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    rldimi r8, r7, 32, 0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    xscvdpsxws f3, f3
; CHECK-P9-NEXT:    mffprwz r4, f2
; CHECK-P9-NEXT:    mtvsrdd vs2, r8, r5
; CHECK-P9-NEXT:    stxv vs2, 0(r3)
; CHECK-P9-NEXT:    mffprwz r7, f1
; CHECK-P9-NEXT:    xscvspdpn f1, vs0
; CHECK-P9-NEXT:    mffprwz r5, f3
; CHECK-P9-NEXT:    rlwimi r5, r4, 16, 0, 15
; CHECK-P9-NEXT:    rlwimi r7, r6, 16, 0, 15
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    rldimi r7, r5, 32, 0
; CHECK-P9-NEXT:    mffprwz r4, f1
; CHECK-P9-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r5, f1
; CHECK-P9-NEXT:    xxswapd vs1, vs0
; CHECK-P9-NEXT:    xxsldwi vs0, vs0, vs0, 3
; CHECK-P9-NEXT:    rlwimi r5, r4, 16, 0, 15
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r4, f1
; CHECK-P9-NEXT:    mffprwz r6, f0
; CHECK-P9-NEXT:    rlwimi r6, r4, 16, 0, 15
; CHECK-P9-NEXT:    rldimi r6, r5, 32, 0
; CHECK-P9-NEXT:    mtvsrdd vs0, r6, r7
; CHECK-P9-NEXT:    stxv vs0, 16(r3)
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test16elt:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    lxv vs2, 16(r4)
; CHECK-BE-NEXT:    lxv vs0, 32(r4)
; CHECK-BE-NEXT:    lxv vs1, 48(r4)
; CHECK-BE-NEXT:    xxsldwi vs4, vs2, vs2, 1
; CHECK-BE-NEXT:    xscvspdpn f3, vs2
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    xscvdpsxws f3, f3
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r5, f3
; CHECK-BE-NEXT:    lxv vs3, 0(r4)
; CHECK-BE-NEXT:    mffprwz r4, f4
; CHECK-BE-NEXT:    xxswapd vs4, vs2
; CHECK-BE-NEXT:    xxsldwi vs2, vs2, vs2, 3
; CHECK-BE-NEXT:    rlwimi r4, r5, 16, 0, 15
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r5, f2
; CHECK-BE-NEXT:    xxsldwi vs2, vs3, vs3, 1
; CHECK-BE-NEXT:    mffprwz r6, f4
; CHECK-BE-NEXT:    xscvspdpn f4, vs3
; CHECK-BE-NEXT:    rlwimi r5, r6, 16, 0, 15
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    rldimi r5, r4, 32, 0
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r6, f4
; CHECK-BE-NEXT:    xxswapd vs4, vs1
; CHECK-BE-NEXT:    mffprwz r7, f2
; CHECK-BE-NEXT:    xxswapd vs2, vs3
; CHECK-BE-NEXT:    xxsldwi vs3, vs3, vs3, 3
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    rlwimi r7, r6, 16, 0, 15
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvspdpn f3, vs3
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    xscvdpsxws f3, f3
; CHECK-BE-NEXT:    mffprwz r6, f2
; CHECK-BE-NEXT:    mffprwz r8, f3
; CHECK-BE-NEXT:    xscvspdpn f2, vs1
; CHECK-BE-NEXT:    xxsldwi vs3, vs1, vs1, 1
; CHECK-BE-NEXT:    xxsldwi vs1, vs1, vs1, 3
; CHECK-BE-NEXT:    rlwimi r8, r6, 16, 0, 15
; CHECK-BE-NEXT:    mffprwz r6, f4
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvspdpn f3, vs3
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    rldimi r8, r7, 32, 0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    xscvdpsxws f3, f3
; CHECK-BE-NEXT:    mffprwz r4, f2
; CHECK-BE-NEXT:    mtvsrdd vs2, r8, r5
; CHECK-BE-NEXT:    stxv vs2, 0(r3)
; CHECK-BE-NEXT:    mffprwz r7, f1
; CHECK-BE-NEXT:    xscvspdpn f1, vs0
; CHECK-BE-NEXT:    mffprwz r5, f3
; CHECK-BE-NEXT:    rlwimi r5, r4, 16, 0, 15
; CHECK-BE-NEXT:    rlwimi r7, r6, 16, 0, 15
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    rldimi r7, r5, 32, 0
; CHECK-BE-NEXT:    mffprwz r4, f1
; CHECK-BE-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    mffprwz r5, f1
; CHECK-BE-NEXT:    xxswapd vs1, vs0
; CHECK-BE-NEXT:    xxsldwi vs0, vs0, vs0, 3
; CHECK-BE-NEXT:    rlwimi r5, r4, 16, 0, 15
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r4, f1
; CHECK-BE-NEXT:    mffprwz r6, f0
; CHECK-BE-NEXT:    rlwimi r6, r4, 16, 0, 15
; CHECK-BE-NEXT:    rldimi r6, r5, 32, 0
; CHECK-BE-NEXT:    mtvsrdd vs0, r6, r7
; CHECK-BE-NEXT:    stxv vs0, 16(r3)
; CHECK-BE-NEXT:    blr
entry:
  %a = load <16 x float>, ptr %0, align 64
  %1 = fptoui <16 x float> %a to <16 x i16>
  store <16 x i16> %1, ptr %agg.result, align 32
  ret void
}

define i32 @test2elt_signed(i64 %a.coerce) local_unnamed_addr #0 {
; CHECK-P8-LABEL: test2elt_signed:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    mtfprd f0, r3
; CHECK-P8-NEXT:    xxswapd v2, vs0
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    xxsldwi vs1, v2, v2, 3
; CHECK-P8-NEXT:    xscvspdpn f1, vs1
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r3, f1
; CHECK-P8-NEXT:    or r3, r4, r3
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test2elt_signed:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    mtfprd f0, r3
; CHECK-P9-NEXT:    xxswapd v2, vs0
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xxsldwi vs1, v2, v2, 3
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r4, f0
; CHECK-P9-NEXT:    slwi r4, r4, 16
; CHECK-P9-NEXT:    mffprwz r3, f1
; CHECK-P9-NEXT:    or r3, r4, r3
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test2elt_signed:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    mtfprd f0, r3
; CHECK-BE-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    mffprwz r4, f0
; CHECK-BE-NEXT:    slwi r4, r4, 16
; CHECK-BE-NEXT:    mffprwz r3, f1
; CHECK-BE-NEXT:    or r3, r4, r3
; CHECK-BE-NEXT:    blr
entry:
  %0 = bitcast i64 %a.coerce to <2 x float>
  %1 = fptosi <2 x float> %0 to <2 x i16>
  %2 = bitcast <2 x i16> %1 to i32
  ret i32 %2
}

define i64 @test4elt_signed(<4 x float> %a) local_unnamed_addr #1 {
; CHECK-P8-LABEL: test4elt_signed:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    xxsldwi vs1, v2, v2, 1
; CHECK-P8-NEXT:    xxswapd vs0, v2
; CHECK-P8-NEXT:    xscvspdpn f1, vs1
; CHECK-P8-NEXT:    xxsldwi vs2, v2, v2, 3
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xscvspdpn f2, vs2
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r3, f1
; CHECK-P8-NEXT:    xscvspdpn f1, v2
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r4, f1
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    or r3, r4, r3
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    mtfprwz f1, r3
; CHECK-P8-NEXT:    mffprwz r3, f2
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    or r3, r4, r3
; CHECK-P8-NEXT:    mtfprwz f0, r3
; CHECK-P8-NEXT:    xxmrghw vs0, vs1, vs0
; CHECK-P8-NEXT:    xxswapd vs0, vs0
; CHECK-P8-NEXT:    mffprd r3, f0
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test4elt_signed:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    xxsldwi vs0, v2, v2, 1
; CHECK-P9-NEXT:    xxsldwi vs1, v2, v2, 3
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r3, f0
; CHECK-P9-NEXT:    xscvspdpn f0, v2
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    mffprwz r4, f0
; CHECK-P9-NEXT:    slwi r4, r4, 16
; CHECK-P9-NEXT:    or r3, r4, r3
; CHECK-P9-NEXT:    mtfprwz f0, r3
; CHECK-P9-NEXT:    mffprwz r3, f1
; CHECK-P9-NEXT:    xxswapd vs1, v2
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r4, f1
; CHECK-P9-NEXT:    slwi r4, r4, 16
; CHECK-P9-NEXT:    or r3, r4, r3
; CHECK-P9-NEXT:    mtfprwz f1, r3
; CHECK-P9-NEXT:    xxmrghw vs0, vs0, vs1
; CHECK-P9-NEXT:    mfvsrld r3, vs0
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test4elt_signed:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    xxsldwi vs0, v2, v2, 1
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r3, f0
; CHECK-BE-NEXT:    xscvspdpn f0, v2
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r4, f0
; CHECK-BE-NEXT:    xxsldwi vs0, v2, v2, 3
; CHECK-BE-NEXT:    slwi r4, r4, 16
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    or r3, r4, r3
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mtvsrwz v3, r3
; CHECK-BE-NEXT:    mffprwz r3, f0
; CHECK-BE-NEXT:    xxswapd vs0, v2
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    mffprwz r4, f0
; CHECK-BE-NEXT:    slwi r4, r4, 16
; CHECK-BE-NEXT:    or r3, r4, r3
; CHECK-BE-NEXT:    mtvsrwz v2, r3
; CHECK-BE-NEXT:    vmrgow v2, v3, v2
; CHECK-BE-NEXT:    mfvsrd r3, v2
; CHECK-BE-NEXT:    blr
entry:
  %0 = fptosi <4 x float> %a to <4 x i16>
  %1 = bitcast <4 x i16> %0 to i64
  ret i64 %1
}

define <8 x i16> @test8elt_signed(ptr nocapture readonly) local_unnamed_addr #2 {
; CHECK-P8-LABEL: test8elt_signed:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    li r4, 16
; CHECK-P8-NEXT:    lxvd2x vs1, 0, r3
; CHECK-P8-NEXT:    lxvd2x vs0, r3, r4
; CHECK-P8-NEXT:    xxswapd v3, vs1
; CHECK-P8-NEXT:    xscvspdpn f1, vs1
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    xxswapd v2, vs0
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xxsldwi vs4, v3, v3, 1
; CHECK-P8-NEXT:    xxsldwi vs5, v3, v3, 3
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    xxsldwi vs2, v2, v2, 1
; CHECK-P8-NEXT:    xscvspdpn f2, vs2
; CHECK-P8-NEXT:    xxsldwi vs3, v2, v2, 3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r3, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v2
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs3
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    or r3, r4, r3
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    mffprwz r5, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs4
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    or r4, r4, r5
; CHECK-P8-NEXT:    mffprwz r5, f1
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    rldimi r4, r3, 32, 0
; CHECK-P8-NEXT:    mtfprd f0, r4
; CHECK-P8-NEXT:    slwi r5, r5, 16
; CHECK-P8-NEXT:    mffprwz r3, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs5
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    or r3, r4, r3
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    or r4, r5, r4
; CHECK-P8-NEXT:    rldimi r4, r3, 32, 0
; CHECK-P8-NEXT:    mtfprd f1, r4
; CHECK-P8-NEXT:    xxmrghd v2, vs0, vs1
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test8elt_signed:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    lxv vs1, 0(r3)
; CHECK-P9-NEXT:    lxv vs0, 16(r3)
; CHECK-P9-NEXT:    xxsldwi vs2, vs1, vs1, 1
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r3, f2
; CHECK-P9-NEXT:    xscvspdpn f2, vs1
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r4, f2
; CHECK-P9-NEXT:    xxsldwi vs2, vs1, vs1, 3
; CHECK-P9-NEXT:    xxswapd vs1, vs1
; CHECK-P9-NEXT:    slwi r4, r4, 16
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    or r3, r4, r3
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r5, f1
; CHECK-P9-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-P9-NEXT:    mffprwz r4, f2
; CHECK-P9-NEXT:    slwi r5, r5, 16
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    or r4, r5, r4
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    rldimi r4, r3, 32, 0
; CHECK-P9-NEXT:    mffprwz r3, f1
; CHECK-P9-NEXT:    xscvspdpn f1, vs0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r5, f1
; CHECK-P9-NEXT:    xxsldwi vs1, vs0, vs0, 3
; CHECK-P9-NEXT:    xxswapd vs0, vs0
; CHECK-P9-NEXT:    slwi r5, r5, 16
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    or r3, r5, r3
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r6, f0
; CHECK-P9-NEXT:    mffprwz r5, f1
; CHECK-P9-NEXT:    slwi r6, r6, 16
; CHECK-P9-NEXT:    or r5, r6, r5
; CHECK-P9-NEXT:    rldimi r5, r3, 32, 0
; CHECK-P9-NEXT:    mtvsrdd v2, r5, r4
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test8elt_signed:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    lxv vs1, 16(r3)
; CHECK-BE-NEXT:    lxv vs0, 0(r3)
; CHECK-BE-NEXT:    xxsldwi vs2, vs1, vs1, 1
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r3, f2
; CHECK-BE-NEXT:    xscvspdpn f2, vs1
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r4, f2
; CHECK-BE-NEXT:    xxsldwi vs2, vs1, vs1, 3
; CHECK-BE-NEXT:    xxswapd vs1, vs1
; CHECK-BE-NEXT:    slwi r4, r4, 16
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    or r3, r4, r3
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r5, f1
; CHECK-BE-NEXT:    xxsldwi vs1, vs0, vs0, 1
; CHECK-BE-NEXT:    mffprwz r4, f2
; CHECK-BE-NEXT:    slwi r5, r5, 16
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    or r4, r5, r4
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    rldimi r4, r3, 32, 0
; CHECK-BE-NEXT:    mffprwz r3, f1
; CHECK-BE-NEXT:    xscvspdpn f1, vs0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    mffprwz r5, f1
; CHECK-BE-NEXT:    xxsldwi vs1, vs0, vs0, 3
; CHECK-BE-NEXT:    xxswapd vs0, vs0
; CHECK-BE-NEXT:    slwi r5, r5, 16
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    or r3, r5, r3
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    mffprwz r6, f0
; CHECK-BE-NEXT:    mffprwz r5, f1
; CHECK-BE-NEXT:    slwi r6, r6, 16
; CHECK-BE-NEXT:    or r5, r6, r5
; CHECK-BE-NEXT:    rldimi r5, r3, 32, 0
; CHECK-BE-NEXT:    mtvsrdd v2, r5, r4
; CHECK-BE-NEXT:    blr
entry:
  %a = load <8 x float>, ptr %0, align 32
  %1 = fptosi <8 x float> %a to <8 x i16>
  ret <8 x i16> %1
}

define void @test16elt_signed(ptr noalias nocapture sret(<16 x i16>) %agg.result, ptr nocapture readonly) local_unnamed_addr #3 {
; CHECK-P8-LABEL: test16elt_signed:
; CHECK-P8:       # %bb.0: # %entry
; CHECK-P8-NEXT:    li r5, 32
; CHECK-P8-NEXT:    lxvd2x vs0, 0, r4
; CHECK-P8-NEXT:    lxvd2x vs2, r4, r5
; CHECK-P8-NEXT:    li r5, 48
; CHECK-P8-NEXT:    lxvd2x vs3, r4, r5
; CHECK-P8-NEXT:    li r5, 16
; CHECK-P8-NEXT:    lxvd2x vs1, r4, r5
; CHECK-P8-NEXT:    xxswapd v2, vs0
; CHECK-P8-NEXT:    xscvspdpn f0, vs0
; CHECK-P8-NEXT:    xscvdpsxws f0, f0
; CHECK-P8-NEXT:    xxswapd v5, vs2
; CHECK-P8-NEXT:    xscvspdpn f2, vs2
; CHECK-P8-NEXT:    xxsldwi vs10, v2, v2, 1
; CHECK-P8-NEXT:    xxsldwi vs11, v2, v2, 3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r4, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs3
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    xxswapd v4, vs3
; CHECK-P8-NEXT:    xxsldwi vs4, v5, v5, 1
; CHECK-P8-NEXT:    xxsldwi vs5, v5, v5, 3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r6, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v5
; CHECK-P8-NEXT:    slwi r6, r6, 16
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    xxsldwi vs6, v4, v4, 1
; CHECK-P8-NEXT:    xxsldwi vs7, v4, v4, 3
; CHECK-P8-NEXT:    xxswapd v3, vs1
; CHECK-P8-NEXT:    xscvspdpn f1, vs1
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    mffprwz r7, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v4
; CHECK-P8-NEXT:    slwi r7, r7, 16
; CHECK-P8-NEXT:    xxsldwi vs9, v3, v3, 3
; CHECK-P8-NEXT:    xxsldwi vs8, v3, v3, 1
; CHECK-P8-NEXT:    xscvspdpn f3, vs8
; CHECK-P8-NEXT:    xscvdpsxws f3, f3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r8, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs4
; CHECK-P8-NEXT:    slwi r8, r8, 16
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r9, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs5
; CHECK-P8-NEXT:    or r7, r7, r9
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r10, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs6
; CHECK-P8-NEXT:    or r4, r4, r10
; CHECK-P8-NEXT:    mffprwz r10, f3
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    rldimi r4, r7, 32, 0
; CHECK-P8-NEXT:    mffprwz r11, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs7
; CHECK-P8-NEXT:    or r8, r8, r11
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r9, f2
; CHECK-P8-NEXT:    xscvspdpn f2, v3
; CHECK-P8-NEXT:    or r6, r6, r9
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    rldimi r6, r8, 32, 0
; CHECK-P8-NEXT:    mtfprd f3, r6
; CHECK-P8-NEXT:    mffprwz r9, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs9
; CHECK-P8-NEXT:    slwi r9, r9, 16
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    or r9, r9, r10
; CHECK-P8-NEXT:    mffprwz r10, f1
; CHECK-P8-NEXT:    xscvspdpn f1, v2
; CHECK-P8-NEXT:    mffprwz r11, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs10
; CHECK-P8-NEXT:    slwi r10, r10, 16
; CHECK-P8-NEXT:    xscvdpsxws f1, f1
; CHECK-P8-NEXT:    or r10, r10, r11
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r11, f1
; CHECK-P8-NEXT:    mtfprd f1, r4
; CHECK-P8-NEXT:    mffprwz r4, f0
; CHECK-P8-NEXT:    rldimi r10, r9, 32, 0
; CHECK-P8-NEXT:    mtfprd f0, r10
; CHECK-P8-NEXT:    mffprwz r12, f2
; CHECK-P8-NEXT:    xscvspdpn f2, vs11
; CHECK-P8-NEXT:    slwi r11, r11, 16
; CHECK-P8-NEXT:    slwi r4, r4, 16
; CHECK-P8-NEXT:    or r11, r11, r12
; CHECK-P8-NEXT:    xscvdpsxws f2, f2
; CHECK-P8-NEXT:    mffprwz r6, f2
; CHECK-P8-NEXT:    or r4, r4, r6
; CHECK-P8-NEXT:    rldimi r4, r11, 32, 0
; CHECK-P8-NEXT:    mtfprd f2, r4
; CHECK-P8-NEXT:    xxmrghd vs1, vs3, vs1
; CHECK-P8-NEXT:    xxswapd vs1, vs1
; CHECK-P8-NEXT:    stxvd2x vs1, r3, r5
; CHECK-P8-NEXT:    xxmrghd vs0, vs0, vs2
; CHECK-P8-NEXT:    xxswapd vs0, vs0
; CHECK-P8-NEXT:    stxvd2x vs0, 0, r3
; CHECK-P8-NEXT:    blr
;
; CHECK-P9-LABEL: test16elt_signed:
; CHECK-P9:       # %bb.0: # %entry
; CHECK-P9-NEXT:    lxv vs2, 0(r4)
; CHECK-P9-NEXT:    lxv vs1, 16(r4)
; CHECK-P9-NEXT:    lxv vs0, 48(r4)
; CHECK-P9-NEXT:    xscvspdpn f3, vs2
; CHECK-P9-NEXT:    xscvspdpn f4, vs1
; CHECK-P9-NEXT:    xscvdpsxws f3, f3
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r5, f3
; CHECK-P9-NEXT:    lxv vs3, 32(r4)
; CHECK-P9-NEXT:    mffprwz r4, f4
; CHECK-P9-NEXT:    slwi r5, r5, 16
; CHECK-P9-NEXT:    slwi r4, r4, 16
; CHECK-P9-NEXT:    xscvspdpn f4, vs3
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r6, f4
; CHECK-P9-NEXT:    xxsldwi vs4, vs2, vs2, 1
; CHECK-P9-NEXT:    slwi r6, r6, 16
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r7, f4
; CHECK-P9-NEXT:    xxsldwi vs4, vs1, vs1, 1
; CHECK-P9-NEXT:    or r5, r5, r7
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r7, f4
; CHECK-P9-NEXT:    xxsldwi vs4, vs3, vs3, 1
; CHECK-P9-NEXT:    or r4, r4, r7
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r7, f4
; CHECK-P9-NEXT:    xxsldwi vs4, vs2, vs2, 3
; CHECK-P9-NEXT:    xxswapd vs2, vs2
; CHECK-P9-NEXT:    or r6, r6, r7
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvspdpn f4, vs4
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    xscvdpsxws f4, f4
; CHECK-P9-NEXT:    mffprwz r8, f2
; CHECK-P9-NEXT:    xxsldwi vs2, vs1, vs1, 3
; CHECK-P9-NEXT:    mffprwz r7, f4
; CHECK-P9-NEXT:    xxswapd vs1, vs1
; CHECK-P9-NEXT:    slwi r8, r8, 16
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    or r7, r8, r7
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    rldimi r7, r5, 32, 0
; CHECK-P9-NEXT:    mffprwz r8, f2
; CHECK-P9-NEXT:    xxswapd vs2, vs3
; CHECK-P9-NEXT:    mffprwz r9, f1
; CHECK-P9-NEXT:    xxsldwi vs1, vs3, vs3, 3
; CHECK-P9-NEXT:    slwi r9, r9, 16
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    xscvspdpn f1, vs1
; CHECK-P9-NEXT:    or r8, r9, r8
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    rldimi r8, r4, 32, 0
; CHECK-P9-NEXT:    xscvdpsxws f1, f1
; CHECK-P9-NEXT:    mffprwz r10, f2
; CHECK-P9-NEXT:    xxsldwi vs2, vs0, vs0, 1
; CHECK-P9-NEXT:    mffprwz r9, f1
; CHECK-P9-NEXT:    mtvsrdd vs1, r8, r7
; CHECK-P9-NEXT:    slwi r10, r10, 16
; CHECK-P9-NEXT:    stxv vs1, 0(r3)
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    or r9, r10, r9
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    rldimi r9, r6, 32, 0
; CHECK-P9-NEXT:    mffprwz r4, f2
; CHECK-P9-NEXT:    xscvspdpn f2, vs0
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r5, f2
; CHECK-P9-NEXT:    xxsldwi vs2, vs0, vs0, 3
; CHECK-P9-NEXT:    xxswapd vs0, vs0
; CHECK-P9-NEXT:    slwi r5, r5, 16
; CHECK-P9-NEXT:    xscvspdpn f0, vs0
; CHECK-P9-NEXT:    xscvspdpn f2, vs2
; CHECK-P9-NEXT:    or r4, r5, r4
; CHECK-P9-NEXT:    xscvdpsxws f0, f0
; CHECK-P9-NEXT:    xscvdpsxws f2, f2
; CHECK-P9-NEXT:    mffprwz r6, f0
; CHECK-P9-NEXT:    mffprwz r5, f2
; CHECK-P9-NEXT:    slwi r6, r6, 16
; CHECK-P9-NEXT:    or r5, r6, r5
; CHECK-P9-NEXT:    rldimi r5, r4, 32, 0
; CHECK-P9-NEXT:    mtvsrdd vs0, r5, r9
; CHECK-P9-NEXT:    stxv vs0, 16(r3)
; CHECK-P9-NEXT:    blr
;
; CHECK-BE-LABEL: test16elt_signed:
; CHECK-BE:       # %bb.0: # %entry
; CHECK-BE-NEXT:    lxv vs2, 16(r4)
; CHECK-BE-NEXT:    lxv vs1, 0(r4)
; CHECK-BE-NEXT:    lxv vs0, 32(r4)
; CHECK-BE-NEXT:    xscvspdpn f3, vs2
; CHECK-BE-NEXT:    xscvspdpn f4, vs1
; CHECK-BE-NEXT:    xscvdpsxws f3, f3
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r5, f3
; CHECK-BE-NEXT:    lxv vs3, 48(r4)
; CHECK-BE-NEXT:    mffprwz r4, f4
; CHECK-BE-NEXT:    slwi r5, r5, 16
; CHECK-BE-NEXT:    slwi r4, r4, 16
; CHECK-BE-NEXT:    xscvspdpn f4, vs3
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r6, f4
; CHECK-BE-NEXT:    xxsldwi vs4, vs2, vs2, 1
; CHECK-BE-NEXT:    slwi r6, r6, 16
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r7, f4
; CHECK-BE-NEXT:    xxsldwi vs4, vs1, vs1, 1
; CHECK-BE-NEXT:    or r5, r5, r7
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r7, f4
; CHECK-BE-NEXT:    xxsldwi vs4, vs3, vs3, 1
; CHECK-BE-NEXT:    or r4, r4, r7
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r7, f4
; CHECK-BE-NEXT:    xxsldwi vs4, vs2, vs2, 3
; CHECK-BE-NEXT:    xxswapd vs2, vs2
; CHECK-BE-NEXT:    or r6, r6, r7
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvspdpn f4, vs4
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    xscvdpsxws f4, f4
; CHECK-BE-NEXT:    mffprwz r8, f2
; CHECK-BE-NEXT:    xxsldwi vs2, vs1, vs1, 3
; CHECK-BE-NEXT:    mffprwz r7, f4
; CHECK-BE-NEXT:    xxswapd vs1, vs1
; CHECK-BE-NEXT:    slwi r8, r8, 16
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    or r7, r8, r7
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    rldimi r7, r5, 32, 0
; CHECK-BE-NEXT:    mffprwz r8, f2
; CHECK-BE-NEXT:    xxswapd vs2, vs3
; CHECK-BE-NEXT:    mffprwz r9, f1
; CHECK-BE-NEXT:    xxsldwi vs1, vs3, vs3, 3
; CHECK-BE-NEXT:    slwi r9, r9, 16
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    xscvspdpn f1, vs1
; CHECK-BE-NEXT:    or r8, r9, r8
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    rldimi r8, r4, 32, 0
; CHECK-BE-NEXT:    xscvdpsxws f1, f1
; CHECK-BE-NEXT:    mffprwz r10, f2
; CHECK-BE-NEXT:    xxsldwi vs2, vs0, vs0, 1
; CHECK-BE-NEXT:    mffprwz r9, f1
; CHECK-BE-NEXT:    mtvsrdd vs1, r8, r7
; CHECK-BE-NEXT:    slwi r10, r10, 16
; CHECK-BE-NEXT:    stxv vs1, 0(r3)
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    or r9, r10, r9
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    rldimi r9, r6, 32, 0
; CHECK-BE-NEXT:    mffprwz r4, f2
; CHECK-BE-NEXT:    xscvspdpn f2, vs0
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r5, f2
; CHECK-BE-NEXT:    xxsldwi vs2, vs0, vs0, 3
; CHECK-BE-NEXT:    xxswapd vs0, vs0
; CHECK-BE-NEXT:    slwi r5, r5, 16
; CHECK-BE-NEXT:    xscvspdpn f0, vs0
; CHECK-BE-NEXT:    xscvspdpn f2, vs2
; CHECK-BE-NEXT:    or r4, r5, r4
; CHECK-BE-NEXT:    xscvdpsxws f0, f0
; CHECK-BE-NEXT:    xscvdpsxws f2, f2
; CHECK-BE-NEXT:    mffprwz r6, f0
; CHECK-BE-NEXT:    mffprwz r5, f2
; CHECK-BE-NEXT:    slwi r6, r6, 16
; CHECK-BE-NEXT:    or r5, r6, r5
; CHECK-BE-NEXT:    rldimi r5, r4, 32, 0
; CHECK-BE-NEXT:    mtvsrdd vs0, r5, r9
; CHECK-BE-NEXT:    stxv vs0, 16(r3)
; CHECK-BE-NEXT:    blr
entry:
  %a = load <16 x float>, ptr %0, align 64
  %1 = fptosi <16 x float> %a to <16 x i16>
  store <16 x i16> %1, ptr %agg.result, align 32
  ret void
}
