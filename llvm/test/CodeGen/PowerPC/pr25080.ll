; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -verify-machineinstrs -mtriple=powerpc64le-- -mcpu=pwr8 < %s | FileCheck %s --check-prefix=LE
; RUN: llc -verify-machineinstrs -mtriple=powerpc64-- -mcpu=pwr8 < %s | FileCheck %s --check-prefix=BE

define <8 x i16> @pr25080(<8 x i32> %a) {
; LE-LABEL: pr25080:
; LE:       # %bb.0: # %entry
; LE-NEXT:    addis 3, 2, .LCPI0_0@toc@ha
; LE-NEXT:    xxlxor 36, 36, 36
; LE-NEXT:    addi 3, 3, .LCPI0_0@toc@l
; LE-NEXT:    lxvd2x 0, 0, 3
; LE-NEXT:    xxland 34, 34, 0
; LE-NEXT:    xxland 35, 35, 0
; LE-NEXT:    vcmpequw 2, 2, 4
; LE-NEXT:    vcmpequw 3, 3, 4
; LE-NEXT:    mfvsrwz 3, 34
; LE-NEXT:    xxsldwi 0, 34, 34, 3
; LE-NEXT:    xxsldwi 1, 34, 34, 1
; LE-NEXT:    xxswapd 4, 34
; LE-NEXT:    xxsldwi 2, 35, 35, 3
; LE-NEXT:    xxsldwi 3, 35, 35, 1
; LE-NEXT:    xxswapd 5, 35
; LE-NEXT:    mffprwz 4, 0
; LE-NEXT:    mffprwz 6, 1
; LE-NEXT:    mffprwz 5, 4
; LE-NEXT:    mffprwz 7, 5
; LE-NEXT:    slwi 4, 4, 16
; LE-NEXT:    or 3, 4, 3
; LE-NEXT:    slwi 4, 6, 16
; LE-NEXT:    mffprwz 6, 2
; LE-NEXT:    or 4, 4, 5
; LE-NEXT:    mfvsrwz 5, 35
; LE-NEXT:    rldimi 4, 3, 32, 0
; LE-NEXT:    addis 3, 2, .LCPI0_1@toc@ha
; LE-NEXT:    slwi 6, 6, 16
; LE-NEXT:    mtfprd 0, 4
; LE-NEXT:    addi 3, 3, .LCPI0_1@toc@l
; LE-NEXT:    or 5, 6, 5
; LE-NEXT:    mffprwz 6, 3
; LE-NEXT:    slwi 6, 6, 16
; LE-NEXT:    or 6, 6, 7
; LE-NEXT:    rldimi 6, 5, 32, 0
; LE-NEXT:    mtfprd 1, 6
; LE-NEXT:    xxmrghd 0, 1, 0
; LE-NEXT:    lxvd2x 1, 0, 3
; LE-NEXT:    xxswapd 34, 1
; LE-NEXT:    xxlor 34, 0, 34
; LE-NEXT:    blr
;
; BE-LABEL: pr25080:
; BE:       # %bb.0: # %entry
; BE-NEXT:    addis 3, 2, .LCPI0_0@toc@ha
; BE-NEXT:    xxlxor 36, 36, 36
; BE-NEXT:    addi 3, 3, .LCPI0_0@toc@l
; BE-NEXT:    lxvw4x 0, 0, 3
; BE-NEXT:    xxland 35, 35, 0
; BE-NEXT:    xxland 34, 34, 0
; BE-NEXT:    vcmpequw 3, 3, 4
; BE-NEXT:    vcmpequw 2, 2, 4
; BE-NEXT:    mfvsrwz 3, 35
; BE-NEXT:    xxsldwi 0, 35, 35, 3
; BE-NEXT:    xxsldwi 1, 35, 35, 1
; BE-NEXT:    xxswapd 4, 35
; BE-NEXT:    xxsldwi 2, 34, 34, 3
; BE-NEXT:    xxsldwi 3, 34, 34, 1
; BE-NEXT:    xxswapd 5, 34
; BE-NEXT:    mffprwz 4, 0
; BE-NEXT:    mffprwz 5, 4
; BE-NEXT:    slwi 4, 4, 16
; BE-NEXT:    or 3, 4, 3
; BE-NEXT:    mffprwz 4, 1
; BE-NEXT:    slwi 4, 4, 16
; BE-NEXT:    or 4, 4, 5
; BE-NEXT:    mffprwz 5, 3
; BE-NEXT:    rldimi 4, 3, 32, 0
; BE-NEXT:    mfvsrwz 3, 34
; BE-NEXT:    mtfprd 0, 4
; BE-NEXT:    mffprwz 4, 2
; BE-NEXT:    slwi 5, 5, 16
; BE-NEXT:    slwi 4, 4, 16
; BE-NEXT:    or 3, 4, 3
; BE-NEXT:    mffprwz 4, 5
; BE-NEXT:    or 4, 5, 4
; BE-NEXT:    rldimi 4, 3, 32, 0
; BE-NEXT:    addis 3, 2, .LCPI0_1@toc@ha
; BE-NEXT:    mtfprd 1, 4
; BE-NEXT:    addi 3, 3, .LCPI0_1@toc@l
; BE-NEXT:    xxmrghd 0, 1, 0
; BE-NEXT:    lxvw4x 1, 0, 3
; BE-NEXT:    xxlor 34, 0, 1
; BE-NEXT:    blr
entry:
  %0 = trunc <8 x i32> %a to <8 x i23>
  %1 = icmp eq <8 x i23> %0, zeroinitializer
  %2 = or <8 x i1> %1, <i1 true, i1 true, i1 true, i1 true, i1 false, i1 false, i1 false, i1 false>
  %3 = sext <8 x i1> %2 to <8 x i16>
  ret <8 x i16> %3
}
