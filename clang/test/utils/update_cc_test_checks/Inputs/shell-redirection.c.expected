// NOTE: Assertions have been autogenerated by utils/update_cc_test_checks.py
/// Check that shell redirections in the RUN line are handled
// RUN: %clang_cc1 -triple=x86_64-unknown-linux-gnu -emit-llvm < %s 2>/dev/null | FileCheck %s
// RUN: %clang_cc1 -triple=x86_64-unknown-linux-gnu -emit-llvm \
// RUN:   -disable-O0-optnone -o - %s 2>&1 | opt -S -passes=mem2reg \
// RUN:   | FileCheck %s --check-prefix=MEM2REG

// CHECK-LABEL: @test(
// CHECK-NEXT:  entry:
// CHECK-NEXT:    [[A_ADDR:%.*]] = alloca i32, align 4
// CHECK-NEXT:    [[B_ADDR:%.*]] = alloca i32, align 4
// CHECK-NEXT:    store i32 [[A:%.*]], ptr [[A_ADDR]], align 4
// CHECK-NEXT:    store i32 [[B:%.*]], ptr [[B_ADDR]], align 4
// CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr [[A_ADDR]], align 4
// CHECK-NEXT:    [[TMP1:%.*]] = load i32, ptr [[B_ADDR]], align 4
// CHECK-NEXT:    [[ADD:%.*]] = add nsw i32 [[TMP0]], [[TMP1]]
// CHECK-NEXT:    ret i32 [[ADD]]
//
// MEM2REG-LABEL: @test(
// MEM2REG-NEXT:  entry:
// MEM2REG-NEXT:    [[ADD:%.*]] = add nsw i32 [[A:%.*]], [[B:%.*]]
// MEM2REG-NEXT:    ret i32 [[ADD]]
//
int test(int a, int b) {
  return a + b;
}
